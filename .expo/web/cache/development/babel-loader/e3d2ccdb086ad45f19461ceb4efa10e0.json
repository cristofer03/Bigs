{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Familia Feliz\\\\Bigs\\\\screens\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.login = function () {\n      var _this$state = _this.state,\n          userID = _this$state.userID,\n          userPassword = _this$state.userPassword;\n\n      if (userID == \"\") {\n        alert(\"Por favor ingrese su ID\");\n\n        _this.setState({\n          userID: ''\n        });\n      } else if (userPassword == \"\") {\n        alert(\"Por favor ingrese su clave\");\n\n        _this.setState({\n          userPassword: ''\n        });\n      } else {\n        var URL = \"https://ws.bigs.do/plataforma/ws2/GET_Login_Session.php?user=\" + _this.state.userID + \"&pass=\" + _this.state.userPassword;\n        console.log(URL);\n        fetch(URL).then(function (response) {\n          return response.text();\n        }).then(function (responseText) {\n          console.log(\"DATOS QUE ESTOY TRALLENDO\", responseText);\n          var responseNew = responseText;\n          console.log(responseNew);\n\n          if (responseNew == 19) {\n            alert(\"ID o Clave incorrecto.\");\n          } else {\n            alert(\"Inicio de sesion exitoso!\");\n\n            _this.props.navigation.navigate(\"Home\", {\n              responseNew: responseNew\n            });\n          }\n        }).catch(function (error) {\n          console.error(error);\n          console.log(error);\n        });\n      }\n\n      Keyboard.dismiss();\n    };\n\n    _this.state = {\n      userID: '',\n      userPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        source: require(\"../assets/images/bg.png\"),\n        style: {\n          flex: 1,\n          width: Dimensions.get(\"window\").width,\n          height: Dimensions.get(\"window\").height,\n          resizeMode: 'stretch'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/images/bigstart.png\"),\n        style: {\n          marginTop: 150,\n          width: 350,\n          height: 150,\n          resizeMode: 'contain'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-person\",\n        size: 28,\n        color: 'rgba(255, 255, 255, 0.7)',\n        style: {\n          position: 'absolute',\n          top: 8,\n          left: 37\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: 350,\n          height: 50,\n          borderRadius: 25,\n          fontSize: 16,\n          paddingLeft: 45,\n          backgroundColor: 'rgba(0, 0, 0, 0.35)',\n          color: 'rgba(255, 255, 255, 0.7)',\n          marginHorizontal: 25\n        },\n        placeholder: 'ID',\n        onChangeText: function onChangeText(userID) {\n          return _this2.setState({\n            userID: userID\n          });\n        },\n        placeholderTextColor: 'rgba(255, 255, 255, 0.7)',\n        underlineColorAndroid: \"transparent\",\n        keyboardType: \"phone-pad\",\n        maxLength: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-lock\",\n        size: 28,\n        color: 'rgba(255, 255, 255, 0.7)',\n        style: {\n          position: 'absolute',\n          top: 8,\n          left: 37\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: 350,\n          height: 50,\n          borderRadius: 25,\n          fontSize: 16,\n          paddingLeft: 45,\n          backgroundColor: 'rgba(0, 0, 0, 0.35)',\n          color: 'rgba(255, 255, 255, 0.7)',\n          marginHorizontal: 25\n        },\n        placeholder: 'Clave',\n        onChangeText: function onChangeText(userPassword) {\n          return _this2.setState({\n            userPassword: userPassword\n          });\n        },\n        placeholderTextColor: 'rgba(255, 255, 255, 0.7)',\n        underlineColorAndroid: \"transparent\",\n        secureTextEntry: true,\n        keyboardType: \"phone-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: 20,\n          width: 350,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: '#0080FF'\n        },\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20,\n          textAlign: 'center',\n          marginTop: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, \"Ingresar\")))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 15,\n          textAlign: 'center',\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, \"\\xA9 2020 BigStart\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: 'Login',\n    headerRight: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      style: {\n        margin: 10,\n        backgroundColor: 'orange',\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#ffffff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, \"Home\"))\n  };\n};\n\nexport { Login as default };\nAppRegistry.registerComponent('login', function () {\n  return login;\n});","map":{"version":3,"sources":["C:/Users/Familia Feliz/Bigs/screens/Login.js"],"names":["React","Component","Icon","Login","props","login","state","userID","userPassword","alert","setState","URL","console","log","fetch","then","response","text","responseText","responseNew","navigation","navigate","catch","error","Keyboard","dismiss","require","flex","width","Dimensions","get","height","resizeMode","alignItems","marginTop","position","top","left","borderRadius","fontSize","paddingLeft","backgroundColor","color","marginHorizontal","textAlign","navigationOptions","title","headerRight","margin","padding","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { \r\n    AppRegistry,\r\n    View, \r\n    Text, \r\n    SafeAreaView, \r\n    TouchableOpacity, \r\n    Image, \r\n    ImageBackground, \r\n    TextInput,\r\n    Dimensions,\r\n    Keyboard,\r\n    ScrollView,\r\n    AsyncStorage\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\tstatic navigationOptions= ({navigation}) =>({\r\n\t\t  title: 'Login',\t\r\n\t\t  headerRight:\t\r\n\t\t  <TouchableOpacity\r\n\t\t\tonPress={() => navigation.navigate('Home')}\r\n\t\t\tstyle={{margin:10,backgroundColor:'orange',padding:10}}>\r\n\t\t\t<Text style={{color:'#ffffff'}}>Home</Text>\r\n\t\t  </TouchableOpacity>\r\n\t\t\r\n\t});  \r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tuserID:'',\r\n\t\t\tuserPassword:''\r\n\t\t}\r\n\t}\r\n\t\r\n\tlogin = () =>{\r\n        const {userID,userPassword} = this.state;\r\n\t\tif(userID==\"\"){\r\n\t\t\talert(\"Por favor ingrese su ID\");\r\n\t\t  this.setState({userID:''})\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\telse if(userPassword==\"\"){\r\n            alert(\"Por favor ingrese su clave\");\r\n\t\tthis.setState({userPassword:''})\r\n\t\t}\r\n        else\r\n        \r\n        {\r\n            const URL= `https://ws.bigs.do/plataforma/ws2/GET_Login_Session.php?user=${this.state.userID}&pass=${this.state.userPassword}`;\r\n\r\n        //  const data = {\r\n        //     USER: this.state.userID,\r\n        //     PASS: this.state.userPassword,\r\n        //     TOKEN_LIVE: 12\r\n        //   };\r\n          \r\n        //   const options = {\r\n        //     method: 'GET',\r\n        //     body: JSON.stringify(data),\r\n        //     headers: {\r\n        //       'Content-Type': 'application/json'\r\n        //     }\r\n        //   };\r\n\r\n        console.log(URL)\r\n        fetch(URL)\r\n\t\t\r\n\t\t.then((response) => response.text())\r\n\t\t .then((responseText)=>{\r\n             console.log(\"DATOS QUE ESTOY TRALLENDO\",responseText)\r\n             var responseNew = (responseText)\r\n             console.log(responseNew)\r\n\t\t\t if(responseNew == 19){\r\n\t\t\t\t \r\n\t\t\t\t alert(\"ID o Clave incorrecto.\");\r\n\t\t\t\t // redirect to profile page\r\n\t\t\t }else{\r\n                 alert(\"Inicio de sesion exitoso!\");\r\n                 this.props.navigation.navigate(\"Home\", {\r\n                     responseNew: responseNew\r\n                 });\r\n\t\t\t }\r\n\t\t })\r\n\t\t .catch((error)=>{\r\n         console.error(error);\r\n         console.log(error)\r\n         \r\n\t\t });\r\n        }\r\n        \r\n\t\t\r\n\t\t\r\n\t\tKeyboard.dismiss();\r\n\t}\r\n\t\r\n  render() {\r\n    return(\r\n        <ImageBackground source={require('../assets/images/bg.png')} style={{flex: 1, width: Dimensions.get(\"window\").width, height: Dimensions.get(\"window\").height, resizeMode: 'stretch'}}>\r\n            <View style={{ flex: 1, }}>\r\n                <View style={{flex: 1, alignItems: 'center'}}>\r\n                    <Image source={require('../assets/images/bigstart.png')} style={{marginTop: 150, width: 350, height: 150, resizeMode: 'contain'}}>\r\n                        </Image>\r\n\r\n                    <View>\r\n                        <Icon\r\n                        name='ios-person'\r\n                        size={28} color={'rgba(255, 255, 255, 0.7)'} style={{position: 'absolute', top: 8, left: 37,}}\r\n                        />\r\n                    <TextInput\r\n                        \r\n                        style={{\r\n                        width: 350, \r\n                        height: 50, \r\n                        borderRadius: 25, \r\n                        fontSize: 16, \r\n                        paddingLeft: 45, \r\n                        backgroundColor: 'rgba(0, 0, 0, 0.35)', \r\n                        color: 'rgba(255, 255, 255, 0.7)', \r\n                        marginHorizontal: 25,}}\r\n                        placeholder={'ID'}\r\n                        onChangeText={userID => this.setState({userID})}\r\n                        placeholderTextColor={'rgba(255, 255, 255, 0.7)'}\r\n                        underlineColorAndroid='transparent'\r\n                        keyboardType='phone-pad'\r\n                        maxLength={5}\r\n                        >\r\n                                \r\n                    </TextInput>\r\n                    </View>\r\n\r\n                    <View style={{marginTop:10}}>\r\n                    <Icon\r\n                        name='ios-lock'\r\n                        size={28} color={'rgba(255, 255, 255, 0.7)'} \r\n                        style={{position: 'absolute', top: 8, left: 37,}}\r\n                        />\r\n                    <TextInput\r\n                        style={{\r\n                        width: 350, \r\n                        height: 50, \r\n                        borderRadius: 25, \r\n                        fontSize: 16, \r\n                        paddingLeft: 45, \r\n                        backgroundColor: 'rgba(0, 0, 0, 0.35)', \r\n                        color: 'rgba(255, 255, 255, 0.7)', \r\n                        marginHorizontal: 25,}}\r\n                        placeholder={'Clave'}\r\n                        onChangeText={userPassword => this.setState({userPassword})}\r\n                        placeholderTextColor={'rgba(255, 255, 255, 0.7)'}\r\n                        underlineColorAndroid='transparent'\r\n                        secureTextEntry={true}\r\n                        keyboardType='phone-pad'\r\n                        />\r\n\r\n                    \r\n\r\n\r\n                    </View>\r\n                    \r\n                    <TouchableOpacity\r\n                        style={{\r\n                        marginTop: 20, \r\n                        width: 350, \r\n                        height: 50, \r\n                        borderRadius: 25, \r\n                        backgroundColor: '#0080FF',}}\r\n                        onPress={this.login}\r\n                        >\r\n                    <Text style={{color: 'white', \r\n                    fontSize: 20, \r\n                    textAlign: 'center', \r\n                    marginTop: 13}}>Ingresar</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </View>\r\n            <View>\r\n            <Text style={{\r\n                color: 'white', \r\n                fontSize: 15, \r\n                textAlign: 'center', \r\n                marginTop: 10}}>© 2020 BigStart</Text>\r\n\r\n                \r\n            </View>\r\n            \r\n        </ImageBackground>\r\n    );\r\n}\r\n}\r\nAppRegistry.registerComponent('login', () => login);"]},"metadata":{},"sourceType":"module"}